import { DataSourceConfig } from './types';

export const DATA_SOURCE_CONFIGS: DataSourceConfig[] = [
  // ========== RELATIONAL DATABASES (10) ==========
  {
    id: 'postgresql',
    name: 'PostgreSQL',
    type: 'postgresql',
    category: 'database',
    icon: 'üêò',
    color: '#336791',
    description: 'Open-source relational database with advanced features',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '5432', required: true, defaultValue: 5432 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'mydb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'postgres', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'ssl', label: 'Use SSL', type: 'checkbox', required: false, defaultValue: false },
    ],
  },
  {
    id: 'mysql',
    name: 'MySQL',
    type: 'mysql',
    category: 'database',
    icon: 'üê¨',
    color: '#4479A1',
    description: 'Popular open-source relational database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '3306', required: true, defaultValue: 3306 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'mydb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'root', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'mariadb',
    name: 'MariaDB',
    type: 'mariadb',
    category: 'database',
    icon: 'ü¶≠',
    color: '#003545',
    description: 'MySQL-compatible relational database fork',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '3306', required: true, defaultValue: 3306 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'mydb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'root', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'sqlite',
    name: 'SQLite',
    type: 'sqlite',
    category: 'database',
    icon: 'üíæ',
    color: '#003B57',
    description: 'Lightweight embedded SQL database',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'Database File Path', type: 'text', placeholder: '/path/to/database.db', required: true },
      { name: 'readonly', label: 'Read Only', type: 'checkbox', required: false, defaultValue: false },
    ],
  },
  {
    id: 'oracle',
    name: 'Oracle Database',
    type: 'oracle',
    category: 'database',
    icon: 'üî¥',
    color: '#F80000',
    description: 'Enterprise-grade relational database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '1521', required: true, defaultValue: 1521 },
      { name: 'serviceName', label: 'Service Name', type: 'text', placeholder: 'ORCL', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'system', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'mssql',
    name: 'Microsoft SQL Server',
    type: 'mssql',
    category: 'database',
    icon: 'ü™ü',
    color: '#CC2927',
    description: 'Microsoft enterprise database system',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '1433', required: true, defaultValue: 1433 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'master', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'sa', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'cockroachdb',
    name: 'CockroachDB',
    type: 'cockroachdb',
    category: 'database',
    icon: 'ü™≥',
    color: '#6933FF',
    description: 'Distributed SQL database for cloud applications',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '26257', required: true, defaultValue: 26257 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'defaultdb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'root', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'duckdb',
    name: 'DuckDB',
    type: 'duckdb',
    category: 'database',
    icon: 'ü¶Ü',
    color: '#FFF000',
    description: 'In-process analytical SQL database',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'Database File Path', type: 'text', placeholder: '/path/to/database.duckdb', required: false },
      { name: 'memory', label: 'In-Memory Mode', type: 'checkbox', required: false, defaultValue: false },
      { name: 'readonly', label: 'Read Only', type: 'checkbox', required: false, defaultValue: false },
    ],
  },
  {
    id: 'snowflake',
    name: 'Snowflake',
    type: 'snowflake',
    category: 'database',
    icon: '‚ùÑÔ∏è',
    color: '#29B5E8',
    description: 'Cloud data warehouse platform',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'account', label: 'Account Identifier', type: 'text', placeholder: 'xy12345.us-east-1', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user@company.com', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'MYDB', required: true },
      { name: 'warehouse', label: 'Warehouse', type: 'text', placeholder: 'COMPUTE_WH', required: true },
      { name: 'schema', label: 'Schema', type: 'text', placeholder: 'PUBLIC', required: false },
    ],
  },
  {
    id: 'vertica',
    name: 'Vertica',
    type: 'vertica',
    category: 'database',
    icon: 'üî∑',
    color: '#005A9C',
    description: 'Columnar analytics database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '5433', required: true, defaultValue: 5433 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'vmart', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'dbadmin', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },

  // ========== NoSQL DATABASES (15) ==========
  {
    id: 'mongodb',
    name: 'MongoDB',
    type: 'mongodb',
    category: 'database',
    icon: 'üçÉ',
    color: '#47A248',
    description: 'Document-oriented NoSQL database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'connectionString', label: 'Connection String', type: 'text', placeholder: 'mongodb://localhost:27017', required: true },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'mydb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'admin', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'redis',
    name: 'Redis',
    type: 'redis',
    category: 'database',
    icon: 'üî¥',
    color: '#DC382D',
    description: 'In-memory data structure store',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '6379', required: true, defaultValue: 6379 },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
      { name: 'database', label: 'Database Index', type: 'number', placeholder: '0', required: false, defaultValue: 0 },
    ],
  },
  {
    id: 'cassandra',
    name: 'Apache Cassandra',
    type: 'cassandra',
    category: 'database',
    icon: 'üî∏',
    color: '#1287B1',
    description: 'Distributed wide-column store',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'contactPoints', label: 'Contact Points (comma-separated)', type: 'text', placeholder: 'localhost,node2', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '9042', required: true, defaultValue: 9042 },
      { name: 'keyspace', label: 'Keyspace', type: 'text', placeholder: 'mykeyspace', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'cassandra', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'couchdb',
    name: 'CouchDB',
    type: 'couchdb',
    category: 'database',
    icon: 'üõãÔ∏è',
    color: '#E42528',
    description: 'Document-oriented database with HTTP API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'url', label: 'URL', type: 'url', placeholder: 'http://localhost:5984', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'admin', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'mydb', required: false },
    ],
  },
  {
    id: 'dynamodb',
    name: 'Amazon DynamoDB',
    type: 'dynamodb',
    category: 'database',
    icon: '‚ö°',
    color: '#4053D6',
    description: 'AWS managed NoSQL database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'region', label: 'Region', type: 'text', placeholder: 'us-east-1', required: true },
      { name: 'accessKeyId', label: 'Access Key ID', type: 'text', placeholder: 'AKIAIOSFODNN7EXAMPLE', required: true },
      { name: 'secretAccessKey', label: 'Secret Access Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'endpoint', label: 'Custom Endpoint (optional)', type: 'url', placeholder: 'http://localhost:8000', required: false },
    ],
  },
  {
    id: 'neo4j',
    name: 'Neo4j',
    type: 'neo4j',
    category: 'database',
    icon: 'üï∏Ô∏è',
    color: '#008CC1',
    description: 'Graph database management system',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'uri', label: 'Connection URI', type: 'url', placeholder: 'bolt://localhost:7687', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'neo4j', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'neo4j', required: false },
    ],
  },
  {
    id: 'arangodb',
    name: 'ArangoDB',
    type: 'arangodb',
    category: 'database',
    icon: 'ü•ë',
    color: '#DDE016',
    description: 'Multi-model database (documents, graphs, key-value)',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'url', label: 'URL', type: 'url', placeholder: 'http://localhost:8529', required: true },
      { name: 'database', label: 'Database', type: 'text', placeholder: '_system', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'root', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'memcached',
    name: 'Memcached',
    type: 'memcached',
    category: 'database',
    icon: 'üß†',
    color: '#00D9FF',
    description: 'Distributed memory caching system',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'servers', label: 'Servers (comma-separated)', type: 'text', placeholder: 'localhost:11211', required: true },
    ],
  },
  {
    id: 'rethinkdb',
    name: 'RethinkDB',
    type: 'rethinkdb',
    category: 'database',
    icon: 'üîÑ',
    color: '#2E3A4F',
    description: 'Real-time database for modern apps',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '28015', required: true, defaultValue: 28015 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'test', required: false },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'admin', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'firestore',
    name: 'Google Firestore',
    type: 'firestore',
    category: 'database',
    icon: 'üî•',
    color: '#FFA000',
    description: 'Cloud-hosted NoSQL database from Firebase',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'projectId', label: 'Project ID', type: 'text', placeholder: 'my-project', required: true },
      { name: 'credentials', label: 'Service Account JSON', type: 'textarea', placeholder: 'Paste JSON credentials', required: true },
    ],
  },
  {
    id: 'hbase',
    name: 'Apache HBase',
    type: 'hbase',
    category: 'database',
    icon: 'üêù',
    color: '#FF6600',
    description: 'Distributed column-oriented database on Hadoop',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'zkQuorum', label: 'ZooKeeper Quorum', type: 'text', placeholder: 'localhost:2181', required: true },
      { name: 'zkNode', label: 'ZooKeeper ZNode', type: 'text', placeholder: '/hbase', required: false, defaultValue: '/hbase' },
    ],
  },
  {
    id: 'scylladb',
    name: 'ScyllaDB',
    type: 'scylladb',
    category: 'database',
    icon: 'ü¶Ç',
    color: '#53CADD',
    description: 'High-performance Cassandra-compatible database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'contactPoints', label: 'Contact Points', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '9042', required: true, defaultValue: 9042 },
      { name: 'keyspace', label: 'Keyspace', type: 'text', placeholder: 'mykeyspace', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'cassandra', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'orientdb',
    name: 'OrientDB',
    type: 'orientdb',
    category: 'database',
    icon: 'üåê',
    color: '#F58025',
    description: 'Multi-model database (graph, document, key-value)',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '2424', required: true, defaultValue: 2424 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'demodb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'root', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'cosmosdb',
    name: 'Azure Cosmos DB',
    type: 'cosmosdb',
    category: 'database',
    icon: 'üåç',
    color: '#0078D4',
    description: 'Globally distributed multi-model database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'endpoint', label: 'Endpoint', type: 'url', placeholder: 'https://account.documents.azure.com:443/', required: true },
      { name: 'key', label: 'Primary Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'database', label: 'Database ID', type: 'text', placeholder: 'ToDoList', required: false },
    ],
  },
  {
    id: 'etcd',
    name: 'etcd',
    type: 'etcd',
    category: 'database',
    icon: 'üîê',
    color: '#419EDA',
    description: 'Distributed key-value store for configuration',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'hosts', label: 'Hosts (comma-separated)', type: 'text', placeholder: 'localhost:2379', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'root', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },

  // ========== TIME SERIES DATABASES (8) ==========
  {
    id: 'influxdb',
    name: 'InfluxDB',
    type: 'influxdb',
    category: 'timeseries',
    icon: '‚è±Ô∏è',
    color: '#22ADF6',
    description: 'Time series database for metrics and events',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'url', label: 'URL', type: 'url', placeholder: 'http://localhost:8086', required: true },
      { name: 'token', label: 'Token', type: 'password', placeholder: 'your-token', required: true },
      { name: 'organization', label: 'Organization', type: 'text', placeholder: 'my-org', required: true },
      { name: 'bucket', label: 'Bucket', type: 'text', placeholder: 'my-bucket', required: true },
    ],
  },
  {
    id: 'questdb',
    name: 'QuestDB',
    type: 'questdb',
    category: 'timeseries',
    icon: '‚ö°',
    color: '#FF9D00',
    description: 'High-performance time series database',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'HTTP Port', type: 'number', placeholder: '9000', required: true, defaultValue: 9000 },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'admin', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'timescaledb',
    name: 'TimescaleDB',
    type: 'timescaledb',
    category: 'timeseries',
    icon: '‚è∞',
    color: '#FDB515',
    description: 'PostgreSQL extension for time series',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '5432', required: true, defaultValue: 5432 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'tsdb', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'postgres', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'prometheus',
    name: 'Prometheus',
    type: 'prometheus',
    category: 'timeseries',
    icon: 'üî•',
    color: '#E6522C',
    description: 'Monitoring system and time series database',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'url', label: 'URL', type: 'url', placeholder: 'http://localhost:9090', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: '', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'victoriametrics',
    name: 'VictoriaMetrics',
    type: 'victoriametrics',
    category: 'timeseries',
    icon: 'üìä',
    color: '#621CEA',
    description: 'Fast and cost-effective time series database',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'url', label: 'URL', type: 'url', placeholder: 'http://localhost:8428', required: true },
    ],
  },
  {
    id: 'opentsdb',
    name: 'OpenTSDB',
    type: 'opentsdb',
    category: 'timeseries',
    icon: 'üìà',
    color: '#44B4E5',
    description: 'Distributed time series database on HBase',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'url', label: 'URL', type: 'url', placeholder: 'http://localhost:4242', required: true },
    ],
  },
  {
    id: 'kdb',
    name: 'kdb+',
    type: 'kdb',
    category: 'timeseries',
    icon: 'üéØ',
    color: '#0069B4',
    description: 'High-performance time series database for financial data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '5000', required: true, defaultValue: 5000 },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'clickhouse',
    name: 'ClickHouse',
    type: 'clickhouse',
    category: 'timeseries',
    icon: '‚öôÔ∏è',
    color: '#FFCC00',
    description: 'Fast open-source columnar database',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'HTTP Port', type: 'number', placeholder: '8123', required: true, defaultValue: 8123 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'default', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'default', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },

  // ========== FILE SOURCES (8) ==========
  {
    id: 'csv',
    name: 'CSV File',
    type: 'csv',
    category: 'file',
    icon: 'üìÑ',
    color: '#217346',
    description: 'Import data from CSV files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select CSV file', required: true },
      { name: 'delimiter', label: 'Delimiter', type: 'select', required: false, defaultValue: ',', options: [
        { label: 'Comma (,)', value: ',' },
        { label: 'Semicolon (;)', value: ';' },
        { label: 'Tab', value: '\\t' },
        { label: 'Pipe (|)', value: '|' },
      ]},
      { name: 'hasHeader', label: 'Has Header Row', type: 'checkbox', required: false, defaultValue: true },
      { name: 'encoding', label: 'Encoding', type: 'select', required: false, defaultValue: 'utf-8', options: [
        { label: 'UTF-8', value: 'utf-8' },
        { label: 'ASCII', value: 'ascii' },
        { label: 'Latin-1', value: 'latin1' },
      ]},
    ],
  },
  {
    id: 'excel',
    name: 'Excel (XLSX)',
    type: 'excel',
    category: 'file',
    icon: 'üìä',
    color: '#217346',
    description: 'Import data from Excel files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select Excel file', required: true },
      { name: 'sheet', label: 'Sheet Name or Index', type: 'text', placeholder: 'Sheet1 or 0', required: false },
      { name: 'hasHeader', label: 'Has Header Row', type: 'checkbox', required: false, defaultValue: true },
    ],
  },
  {
    id: 'json',
    name: 'JSON File',
    type: 'json',
    category: 'file',
    icon: 'üìã',
    color: '#F7DF1E',
    description: 'Import data from JSON files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select JSON file', required: true },
      { name: 'jsonPath', label: 'JSON Path (optional)', type: 'text', placeholder: '$.data', required: false },
    ],
  },
  {
    id: 'parquet',
    name: 'Parquet File',
    type: 'parquet',
    category: 'file',
    icon: 'üì¶',
    color: '#FF6B00',
    description: 'Import data from Apache Parquet files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select Parquet file', required: true },
    ],
  },
  {
    id: 'xml',
    name: 'XML File',
    type: 'xml',
    category: 'file',
    icon: 'üìù',
    color: '#FF6600',
    description: 'Import data from XML files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select XML file', required: true },
      { name: 'xpath', label: 'XPath Expression', type: 'text', placeholder: '//record', required: false },
    ],
  },
  {
    id: 'avro',
    name: 'Avro File',
    type: 'avro',
    category: 'file',
    icon: 'üî∑',
    color: '#0066CC',
    description: 'Import data from Apache Avro files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select Avro file', required: true },
    ],
  },
  {
    id: 'orc',
    name: 'ORC File',
    type: 'orc',
    category: 'file',
    icon: 'üü¶',
    color: '#5B9BD5',
    description: 'Import data from Apache ORC files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select ORC file', required: true },
    ],
  },
  {
    id: 'feather',
    name: 'Feather File',
    type: 'feather',
    category: 'file',
    icon: 'ü™∂',
    color: '#FF4081',
    description: 'Import data from Apache Arrow Feather files',
    testable: false,
    requiresAuth: false,
    fields: [
      { name: 'filepath', label: 'File Path', type: 'text', placeholder: 'Select Feather file', required: true },
    ],
  },

  // ========== API SOURCES (10) ==========
  {
    id: 'rest-api',
    name: 'REST API',
    type: 'rest-api',
    category: 'api',
    icon: 'üåê',
    color: '#61DAFB',
    description: 'Connect to REST API endpoints',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'baseUrl', label: 'Base URL', type: 'url', placeholder: 'https://api.example.com', required: true },
      { name: 'authType', label: 'Authentication Type', type: 'select', required: false, defaultValue: 'none', options: [
        { label: 'None', value: 'none' },
        { label: 'API Key', value: 'apikey' },
        { label: 'Bearer Token', value: 'bearer' },
        { label: 'Basic Auth', value: 'basic' },
      ]},
      { name: 'apiKey', label: 'API Key / Token', type: 'password', placeholder: 'your-api-key', required: false },
      { name: 'headers', label: 'Custom Headers (JSON)', type: 'textarea', placeholder: '{"X-Custom": "value"}', required: false },
    ],
  },
  {
    id: 'graphql',
    name: 'GraphQL API',
    type: 'graphql',
    category: 'api',
    icon: '‚óÜ',
    color: '#E10098',
    description: 'Connect to GraphQL endpoints',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'endpoint', label: 'GraphQL Endpoint', type: 'url', placeholder: 'https://api.example.com/graphql', required: true },
      { name: 'authToken', label: 'Auth Token', type: 'password', placeholder: 'Bearer token', required: false },
      { name: 'headers', label: 'Custom Headers (JSON)', type: 'textarea', placeholder: '{"Authorization": "Bearer token"}', required: false },
    ],
  },
  {
    id: 'websocket',
    name: 'WebSocket',
    type: 'websocket',
    category: 'streaming',
    icon: 'üîå',
    color: '#00A8E8',
    description: 'Connect to WebSocket streams',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'url', label: 'WebSocket URL', type: 'url', placeholder: 'wss://stream.example.com', required: true },
      { name: 'protocols', label: 'Protocols (comma-separated)', type: 'text', placeholder: 'protocol1,protocol2', required: false },
      { name: 'reconnect', label: 'Auto Reconnect', type: 'checkbox', required: false, defaultValue: true },
    ],
  },
  {
    id: 'grpc',
    name: 'gRPC',
    type: 'grpc',
    category: 'api',
    icon: '‚öôÔ∏è',
    color: '#00ADD8',
    description: 'Connect to gRPC services',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '50051', required: true, defaultValue: 50051 },
      { name: 'tls', label: 'Use TLS', type: 'checkbox', required: false, defaultValue: false },
      { name: 'protoFile', label: 'Proto File Path', type: 'text', placeholder: '/path/to/service.proto', required: false },
    ],
  },
  {
    id: 'soap',
    name: 'SOAP API',
    type: 'soap',
    category: 'api',
    icon: 'üßº',
    color: '#0080FF',
    description: 'Connect to SOAP web services',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'wsdlUrl', label: 'WSDL URL', type: 'url', placeholder: 'https://api.example.com/service?wsdl', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'odata',
    name: 'OData API',
    type: 'odata',
    category: 'api',
    icon: 'üîó',
    color: '#0078D4',
    description: 'Connect to OData services',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'serviceRoot', label: 'Service Root URL', type: 'url', placeholder: 'https://api.example.com/odata', required: true },
      { name: 'authType', label: 'Authentication', type: 'select', required: false, defaultValue: 'none', options: [
        { label: 'None', value: 'none' },
        { label: 'Basic', value: 'basic' },
        { label: 'OAuth2', value: 'oauth2' },
      ]},
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'mqtt',
    name: 'MQTT',
    type: 'mqtt',
    category: 'streaming',
    icon: 'üì°',
    color: '#660066',
    description: 'Connect to MQTT broker for IoT data',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'broker', label: 'Broker URL', type: 'url', placeholder: 'mqtt://broker.example.com', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '1883', required: true, defaultValue: 1883 },
      { name: 'clientId', label: 'Client ID', type: 'text', placeholder: 'mqtt_client_123', required: false },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
      { name: 'topic', label: 'Default Topic', type: 'text', placeholder: 'sensors/#', required: false },
    ],
  },
  {
    id: 'kafka',
    name: 'Apache Kafka',
    type: 'kafka',
    category: 'streaming',
    icon: 'üåä',
    color: '#231F20',
    description: 'Connect to Kafka streaming platform',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'brokers', label: 'Bootstrap Servers (comma-separated)', type: 'text', placeholder: 'localhost:9092,broker2:9092', required: true },
      { name: 'groupId', label: 'Consumer Group ID', type: 'text', placeholder: 'my-group', required: false },
      { name: 'topic', label: 'Default Topic', type: 'text', placeholder: 'my-topic', required: false },
      { name: 'sasl', label: 'Use SASL Authentication', type: 'checkbox', required: false, defaultValue: false },
      { name: 'username', label: 'SASL Username', type: 'text', placeholder: 'user', required: false },
      { name: 'password', label: 'SASL Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'rabbitmq',
    name: 'RabbitMQ',
    type: 'rabbitmq',
    category: 'streaming',
    icon: 'üê∞',
    color: '#FF6600',
    description: 'Connect to RabbitMQ message broker',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '5672', required: true, defaultValue: 5672 },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'guest', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'vhost', label: 'Virtual Host', type: 'text', placeholder: '/', required: false, defaultValue: '/' },
    ],
  },
  {
    id: 'nats',
    name: 'NATS',
    type: 'nats',
    category: 'streaming',
    icon: 'üìÆ',
    color: '#375C93',
    description: 'Connect to NATS messaging system',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'servers', label: 'Server URLs (comma-separated)', type: 'text', placeholder: 'nats://localhost:4222', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
      { name: 'token', label: 'Token', type: 'password', placeholder: 'auth-token', required: false },
    ],
  },

  // ========== CLOUD STORAGE (10) ==========
  {
    id: 'aws-s3',
    name: 'AWS S3',
    type: 'aws-s3',
    category: 'cloud',
    icon: '‚òÅÔ∏è',
    color: '#FF9900',
    description: 'Amazon S3 object storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'region', label: 'Region', type: 'text', placeholder: 'us-east-1', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'accessKeyId', label: 'Access Key ID', type: 'text', placeholder: 'AKIAIOSFODNN7EXAMPLE', required: true },
      { name: 'secretAccessKey', label: 'Secret Access Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'prefix', label: 'Prefix (optional)', type: 'text', placeholder: 'data/', required: false },
    ],
  },
  {
    id: 'google-cloud-storage',
    name: 'Google Cloud Storage',
    type: 'google-cloud-storage',
    category: 'cloud',
    icon: '‚òÅÔ∏è',
    color: '#4285F4',
    description: 'Google Cloud object storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'projectId', label: 'Project ID', type: 'text', placeholder: 'my-project', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'credentials', label: 'Service Account JSON', type: 'textarea', placeholder: 'Paste JSON credentials', required: true },
    ],
  },
  {
    id: 'azure-blob',
    name: 'Azure Blob Storage',
    type: 'azure-blob',
    category: 'cloud',
    icon: '‚òÅÔ∏è',
    color: '#0078D4',
    description: 'Microsoft Azure blob storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'accountName', label: 'Account Name', type: 'text', placeholder: 'mystorageaccount', required: true },
      { name: 'accountKey', label: 'Account Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'container', label: 'Container Name', type: 'text', placeholder: 'my-container', required: true },
    ],
  },
  {
    id: 'digitalocean-spaces',
    name: 'DigitalOcean Spaces',
    type: 'digitalocean-spaces',
    category: 'cloud',
    icon: 'üåä',
    color: '#0080FF',
    description: 'DigitalOcean object storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'region', label: 'Region', type: 'text', placeholder: 'nyc3', required: true },
      { name: 'space', label: 'Space Name', type: 'text', placeholder: 'my-space', required: true },
      { name: 'accessKey', label: 'Access Key', type: 'text', placeholder: 'your-access-key', required: true },
      { name: 'secretKey', label: 'Secret Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'minio',
    name: 'MinIO',
    type: 'minio',
    category: 'cloud',
    icon: 'üóÑÔ∏è',
    color: '#C72E49',
    description: 'Self-hosted S3-compatible object storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'endpoint', label: 'Endpoint', type: 'url', placeholder: 'http://localhost:9000', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'accessKey', label: 'Access Key', type: 'text', placeholder: 'minioadmin', required: true },
      { name: 'secretKey', label: 'Secret Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'backblaze-b2',
    name: 'Backblaze B2',
    type: 'backblaze-b2',
    category: 'cloud',
    icon: 'üíæ',
    color: '#FF0000',
    description: 'Backblaze B2 cloud storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'keyId', label: 'Application Key ID', type: 'text', placeholder: 'your-key-id', required: true },
      { name: 'applicationKey', label: 'Application Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'bucketId', label: 'Bucket ID', type: 'text', placeholder: 'bucket-id', required: true },
    ],
  },
  {
    id: 'wasabi',
    name: 'Wasabi',
    type: 'wasabi',
    category: 'cloud',
    icon: 'ü•¨',
    color: '#00B388',
    description: 'Wasabi hot cloud storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'region', label: 'Region', type: 'text', placeholder: 'us-east-1', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'accessKey', label: 'Access Key', type: 'text', placeholder: 'your-access-key', required: true },
      { name: 'secretKey', label: 'Secret Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'cloudflare-r2',
    name: 'Cloudflare R2',
    type: 'cloudflare-r2',
    category: 'cloud',
    icon: 'üî∂',
    color: '#F38020',
    description: 'Cloudflare R2 storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'accountId', label: 'Account ID', type: 'text', placeholder: 'your-account-id', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'accessKeyId', label: 'Access Key ID', type: 'text', placeholder: 'access-key', required: true },
      { name: 'secretAccessKey', label: 'Secret Access Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'oracle-cloud-storage',
    name: 'Oracle Cloud Storage',
    type: 'oracle-cloud-storage',
    category: 'cloud',
    icon: 'üî¥',
    color: '#F80000',
    description: 'Oracle Cloud Infrastructure object storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'region', label: 'Region', type: 'text', placeholder: 'us-phoenix-1', required: true },
      { name: 'namespace', label: 'Namespace', type: 'text', placeholder: 'my-namespace', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'accessKey', label: 'Access Key', type: 'text', placeholder: 'access-key', required: true },
      { name: 'secretKey', label: 'Secret Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'ibm-cloud-storage',
    name: 'IBM Cloud Object Storage',
    type: 'ibm-cloud-storage',
    category: 'cloud',
    icon: 'üîµ',
    color: '#0F62FE',
    description: 'IBM Cloud object storage',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'endpoint', label: 'Endpoint', type: 'url', placeholder: 'https://s3.us.cloud-object-storage.appdomain.cloud', required: true },
      { name: 'bucket', label: 'Bucket Name', type: 'text', placeholder: 'my-bucket', required: true },
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'serviceInstanceId', label: 'Service Instance ID', type: 'text', placeholder: 'crn:v1:...', required: true },
    ],
  },

  // ========== MARKET DATA SOURCES (20) ==========
  {
    id: 'yahoo-finance',
    name: 'Yahoo Finance',
    type: 'yahoo-finance',
    category: 'market-data',
    icon: 'üìà',
    color: '#7B0099',
    description: 'Free stock market data from Yahoo Finance',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'symbols', label: 'Default Symbols (comma-separated)', type: 'text', placeholder: 'AAPL,GOOGL,MSFT', required: false },
      { name: 'interval', label: 'Default Interval', type: 'select', required: false, defaultValue: '1d', options: [
        { label: '1 minute', value: '1m' },
        { label: '5 minutes', value: '5m' },
        { label: '15 minutes', value: '15m' },
        { label: '1 hour', value: '1h' },
        { label: '1 day', value: '1d' },
        { label: '1 week', value: '1wk' },
      ]},
    ],
  },
  {
    id: 'alpha-vantage',
    name: 'Alpha Vantage',
    type: 'alpha-vantage',
    category: 'market-data',
    icon: 'üìä',
    color: '#2E7D32',
    description: 'Stock, forex, and crypto market data API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'polygon-io',
    name: 'Polygon.io',
    type: 'polygon-io',
    category: 'market-data',
    icon: 'üî∑',
    color: '#7C3AED',
    description: 'Real-time and historical market data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'finnhub',
    name: 'Finnhub',
    type: 'finnhub',
    category: 'market-data',
    icon: 'üìâ',
    color: '#00D4AA',
    description: 'Real-time stock, forex, and crypto data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'iex-cloud',
    name: 'IEX Cloud',
    type: 'iex-cloud',
    category: 'market-data',
    icon: 'üíπ',
    color: '#1D7DF0',
    description: 'Financial data from IEX Exchange',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'token', label: 'API Token', type: 'password', placeholder: 'pk_...', required: true },
      { name: 'sandbox', label: 'Use Sandbox', type: 'checkbox', required: false, defaultValue: false },
    ],
  },
  {
    id: 'twelve-data',
    name: 'Twelve Data',
    type: 'twelve-data',
    category: 'market-data',
    icon: '‚è∞',
    color: '#00B4D8',
    description: 'Real-time and historical financial data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'quandl',
    name: 'Quandl/Nasdaq Data Link',
    type: 'quandl',
    category: 'market-data',
    icon: 'üìö',
    color: '#FF6B6B',
    description: 'Financial and alternative datasets',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'binance',
    name: 'Binance',
    type: 'binance',
    category: 'market-data',
    icon: '‚Çø',
    color: '#F3BA2F',
    description: 'Cryptocurrency exchange data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
      { name: 'apiSecret', label: 'API Secret', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'testnet', label: 'Use Testnet', type: 'checkbox', required: false, defaultValue: false },
    ],
  },
  {
    id: 'coinbase',
    name: 'Coinbase',
    type: 'coinbase',
    category: 'market-data',
    icon: 'ü™ô',
    color: '#0052FF',
    description: 'Cryptocurrency exchange data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
      { name: 'apiSecret', label: 'API Secret', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'kraken',
    name: 'Kraken',
    type: 'kraken',
    category: 'market-data',
    icon: 'üêô',
    color: '#5741D9',
    description: 'Cryptocurrency exchange data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
      { name: 'privateKey', label: 'Private Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'coinmarketcap',
    name: 'CoinMarketCap',
    type: 'coinmarketcap',
    category: 'market-data',
    icon: 'üí∞',
    color: '#17A2F5',
    description: 'Cryptocurrency market data aggregator',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'coingecko',
    name: 'CoinGecko',
    type: 'coingecko',
    category: 'market-data',
    icon: 'ü¶é',
    color: '#8DC63F',
    description: 'Free cryptocurrency data API',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'apiKey', label: 'API Key (Pro only)', type: 'password', placeholder: 'your-api-key', required: false },
    ],
  },
  {
    id: 'eod-historical',
    name: 'EOD Historical Data',
    type: 'eod-historical',
    category: 'market-data',
    icon: 'üìú',
    color: '#4A90E2',
    description: 'Historical financial data API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiToken', label: 'API Token', type: 'password', placeholder: 'your-api-token', required: true },
    ],
  },
  {
    id: 'tiingo',
    name: 'Tiingo',
    type: 'tiingo',
    category: 'market-data',
    icon: 'üîî',
    color: '#FF4E50',
    description: 'Stock, crypto, and news data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiToken', label: 'API Token', type: 'password', placeholder: 'your-api-token', required: true },
    ],
  },
  {
    id: 'intrinio',
    name: 'Intrinio',
    type: 'intrinio',
    category: 'market-data',
    icon: 'üè¢',
    color: '#00B4D8',
    description: 'Financial data for institutions',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'bloomberg',
    name: 'Bloomberg API',
    type: 'bloomberg',
    category: 'market-data',
    icon: 'üì∞',
    color: '#F58025',
    description: 'Bloomberg Terminal API (requires license)',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'localhost', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '8194', required: true, defaultValue: 8194 },
    ],
  },
  {
    id: 'reuters',
    name: 'Refinitiv/Reuters',
    type: 'reuters',
    category: 'market-data',
    icon: 'üì°',
    color: '#FF6200',
    description: 'Refinitiv financial data API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'appKey', label: 'App Key', type: 'password', placeholder: 'your-app-key', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user@company.com', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'marketstack',
    name: 'Marketstack',
    type: 'marketstack',
    category: 'market-data',
    icon: 'üè¶',
    color: '#4CAF50',
    description: 'Real-time and historical stock data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
      { name: 'https', label: 'Use HTTPS (paid plans)', type: 'checkbox', required: false, defaultValue: false },
    ],
  },
  {
    id: 'finage',
    name: 'Finage',
    type: 'finage',
    category: 'market-data',
    icon: 'üíµ',
    color: '#00C853',
    description: 'Real-time and historical market data',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: 'your-api-key', required: true },
    ],
  },
  {
    id: 'tradier',
    name: 'Tradier',
    type: 'tradier',
    category: 'market-data',
    icon: 'üéØ',
    color: '#00A8E8',
    description: 'Brokerage and market data API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'accessToken', label: 'Access Token', type: 'password', placeholder: 'your-access-token', required: true },
      { name: 'sandbox', label: 'Use Sandbox', type: 'checkbox', required: false, defaultValue: false },
    ],
  },

  // ========== SEARCH & ANALYTICS (5) ==========
  {
    id: 'elasticsearch',
    name: 'Elasticsearch',
    type: 'elasticsearch',
    category: 'database',
    icon: 'üîç',
    color: '#005571',
    description: 'Distributed search and analytics engine',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'node', label: 'Node URL', type: 'url', placeholder: 'http://localhost:9200', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'elastic', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
      { name: 'index', label: 'Default Index', type: 'text', placeholder: 'my-index', required: false },
    ],
  },
  {
    id: 'opensearch',
    name: 'OpenSearch',
    type: 'opensearch',
    category: 'database',
    icon: 'üîé',
    color: '#003B5C',
    description: 'Open-source fork of Elasticsearch',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'node', label: 'Node URL', type: 'url', placeholder: 'https://localhost:9200', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'admin', required: false },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
    ],
  },
  {
    id: 'solr',
    name: 'Apache Solr',
    type: 'solr',
    category: 'database',
    icon: '‚òÄÔ∏è',
    color: '#D9411E',
    description: 'Enterprise search platform',
    testable: true,
    requiresAuth: false,
    fields: [
      { name: 'host', label: 'Host', type: 'url', placeholder: 'http://localhost:8983/solr', required: true },
      { name: 'collection', label: 'Collection', type: 'text', placeholder: 'my-collection', required: false },
    ],
  },
  {
    id: 'algolia',
    name: 'Algolia',
    type: 'algolia',
    category: 'database',
    icon: 'üî∑',
    color: '#5468FF',
    description: 'Hosted search API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'appId', label: 'Application ID', type: 'text', placeholder: 'your-app-id', required: true },
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
      { name: 'index', label: 'Index Name', type: 'text', placeholder: 'my_index', required: false },
    ],
  },
  {
    id: 'meilisearch',
    name: 'MeiliSearch',
    type: 'meilisearch',
    category: 'database',
    icon: '‚ö°',
    color: '#FF5CAA',
    description: 'Lightning-fast search API',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'url', placeholder: 'http://localhost:7700', required: true },
      { name: 'apiKey', label: 'API Key', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
      { name: 'index', label: 'Index Name', type: 'text', placeholder: 'movies', required: false },
    ],
  },

  // ========== DATA WAREHOUSES (4) ==========
  {
    id: 'bigquery',
    name: 'Google BigQuery',
    type: 'bigquery',
    category: 'database',
    icon: 'üìä',
    color: '#4285F4',
    description: 'Serverless data warehouse',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'projectId', label: 'Project ID', type: 'text', placeholder: 'my-project', required: true },
      { name: 'dataset', label: 'Dataset', type: 'text', placeholder: 'my_dataset', required: false },
      { name: 'credentials', label: 'Service Account JSON', type: 'textarea', placeholder: 'Paste JSON credentials', required: true },
    ],
  },
  {
    id: 'redshift',
    name: 'Amazon Redshift',
    type: 'redshift',
    category: 'database',
    icon: 'üî¥',
    color: '#E25555',
    description: 'AWS data warehouse',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'cluster.region.redshift.amazonaws.com', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '5439', required: true, defaultValue: 5439 },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'dev', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'awsuser', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'databricks',
    name: 'Databricks',
    type: 'databricks',
    category: 'database',
    icon: 'üß±',
    color: '#FF3621',
    description: 'Unified analytics platform',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'serverHostname', label: 'Server Hostname', type: 'text', placeholder: 'your-workspace.cloud.databricks.com', required: true },
      { name: 'httpPath', label: 'HTTP Path', type: 'text', placeholder: '/sql/1.0/warehouses/...', required: true },
      { name: 'accessToken', label: 'Personal Access Token', type: 'password', placeholder: 'dapi...', required: true },
    ],
  },
  {
    id: 'synapse',
    name: 'Azure Synapse',
    type: 'synapse',
    category: 'database',
    icon: 'üî∑',
    color: '#0078D4',
    description: 'Azure analytics service',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'server', label: 'Server', type: 'text', placeholder: 'workspace.sql.azuresynapse.net', required: true },
      { name: 'database', label: 'Database', type: 'text', placeholder: 'sqlpool', required: true },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'sqladmin', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },

  // ========== FTP/SFTP (2) ==========
  {
    id: 'ftp',
    name: 'FTP',
    type: 'ftp',
    category: 'file',
    icon: 'üìÅ',
    color: '#0066CC',
    description: 'File Transfer Protocol',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'ftp.example.com', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '21', required: true, defaultValue: 21 },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: true },
    ],
  },
  {
    id: 'sftp',
    name: 'SFTP',
    type: 'sftp',
    category: 'file',
    icon: 'üîí',
    color: '#00CC66',
    description: 'Secure File Transfer Protocol',
    testable: true,
    requiresAuth: true,
    fields: [
      { name: 'host', label: 'Host', type: 'text', placeholder: 'sftp.example.com', required: true },
      { name: 'port', label: 'Port', type: 'number', placeholder: '22', required: true, defaultValue: 22 },
      { name: 'username', label: 'Username', type: 'text', placeholder: 'user', required: true },
      { name: 'password', label: 'Password', type: 'password', placeholder: '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢', required: false },
      { name: 'privateKey', label: 'Private Key Path', type: 'text', placeholder: '/path/to/key', required: false },
    ],
  },
];
